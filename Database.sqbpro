
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/


--UPDATE covid_death_data SET date = date(substr(date, 7)||'-'||substr(date, 4, 2)||'-'||substr(date, 1, 2));
--UPDATE covid_death_data SET date = strftime('%Y-%m-%d', date);

--UPDATE CovidVaccinations SET date = date(substr(date, 7)||'-'||substr(date, 4, 2)||'-'||substr(date, 1, 2));
--UPDATE CovidVaccinations SET date = strftime('%Y-%m-%d', date);

select location, date, total_cases, new_cases, total_deaths, population
from covid_death_data order by 1,2;

-- Looking at total cases vs total deaths

-- Shows likelihood of dying if you contract covid in your country




SELECT location, date, total_cases, total_deaths, CAST(total_deaths AS FLOAT) / CAST(total_cases AS FLOAT) * 100 AS death_percentage
FROM covid_death_data
where location like '%kingdom%'
ORDER BY location, date;


-- Total Cases Vs Population 

-- Shows what percentage of population infected with Covid




Select location, date, population, total_cases, CAST(total_cases as float)/ cast (population as float) *100 as InfectedPopulationPercentage 
from covid_death_data
where location like '%kingdom%'
order by 1,2;


-- Countries with Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases ) as HighestInfectionCount,  Max(cast(total_cases as float)/cast(population as float))*100 as PercentPopulationInfected

From covid_death_data

Group by Location, Population

order by PercentPopulationInfected desc;



-- Countries with Highest Death Count per Population



Select Location, MAX(cast(Total_deaths as int)) as TotalDeathCount

From covid_death_data

Where continent is not null 

Group by Location

order by TotalDeathCount desc;



-- BREAKING THINGS DOWN BY CONTINENT



-- Showing contintents with the highest death count per population



Select continent, Max(cast (total_deaths as int)) as Deathcount

From covid_death_data

Where continent is not null 

Group by continent

Order by deathcount;



--Total Population  vs Vaccinations 

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) Over(Partition By dea.location order by dea.location, dea.date)as RollingPeopleVaccinated
from covid_death_data dea
Join CovidVaccinations vac
On dea.location= vac.location
and dea.date= vac.date
where dea.continent is not null 
order by 2,3; 

-- Using CTE to perform Calculation on Partition By in previous query

WITH PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated) AS (
  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
  FROM covid_death_data dea
  JOIN CovidVaccinations vac
    ON dea.location = vac.location AND dea.date = vac.date
  WHERE dea.continent IS NOT NULL 
 
)
SELECT *, (RollingPeopleVaccinated / Population) * 100
FROM PopvsVac;



WITH PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated) AS (
  SELECT dea.continent, dea.location, dea.date, dea.population, CAST(vac.new_vaccinations AS INTEGER),
    SUM(CAST(vac.new_vaccinations AS INTEGER)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
  FROM covid_death_data dea
  JOIN CovidVaccinations vac
    ON dea.location = vac.location AND dea.date = vac.date
  WHERE dea.continent IS NOT NULL 
)
SELECT *, (CAST(RollingPeopleVaccinated AS FLOAT) / CAST(Population AS FLOAT) * 100 )
FROM PopvsVac;








